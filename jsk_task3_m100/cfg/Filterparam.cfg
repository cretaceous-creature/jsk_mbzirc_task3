#!/usr/bin/env python
PACKAGE = "jsk_mbzirc_tasks"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
# Hue space offset of rgb
gen.add("debug_show",    bool_t,    0, "Debug flag to show window",  False)
gen.add("r_offset",    int_t,    0, "HSi Hue red offset from 0(180)",  18,  0, 30)
gen.add("g_offset",    int_t,    0, "HSi Hue green offset from 60",  26,  0, 30)
gen.add("b_offset",    int_t,    0, "HSi Hue blue offset from 120",  26,  0, 30)
# Hue space offset of yellow and orange
gen.add("ye_offset",    int_t,    0, "HSi Hue yellow offset from 30",  1,  0, 10)
gen.add("or_offset",    int_t,    0, "HSi Hue orange offset from 20",  1,  0, 10)

#S and V max
gen.add("hsv_s_max",    int_t,    0, "HSi Saturation max param",  230,  0, 255)
gen.add("hsv_v_max",    int_t,    0, "HSi Brightless max param",  230,  0, 255)
#S and V min 
gen.add("hsv_s_min",    int_t,    0, "HSi Saturation min param",  100,  0, 255)
gen.add("hsv_v_min",    int_t,    0, "HSi Brightless min param",  100,  0, 255)
#clustering parameters
gen.add("cluster_threhold_dist",    int_t,    0, "cluster pixel distance",  18,  0, 400)
gen.add("downsample_cluster_size",    int_t,    0, "threshold for the clusteres to be downsampled",  1000,  100, 5000)
gen.add("min_cluster_size",    int_t,    0, "small clusteres to be remove",  10,  0, 1000)
#fake distance to the ground
gen.add("fake_height",    double_t,    0, "fake height of the UAV meter",  0,  0, 30)
exit(gen.generate(PACKAGE, "jsk_mbzirc_tasks", "Filterparam"))
